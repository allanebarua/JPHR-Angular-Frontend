{"version":3,"file":"storage.abstract_browser.js","sourceRoot":"","sources":["../../../../src/services/storage/storage.abstract_browser.ts"],"names":[],"mappings":";;;;;OAAO,EAAE,gBAAgB,EAAE,MAAM,6BAA6B;OAEvD,EAAE,UAAU,EAAE,MAAM,uBAAuB;AAIlD,IAAM,gBAAgB,CAAC,MAAM,GAAG,6BAA6B,CAAC;AAC9D;;;;;;;;;;;GAWG;AACH;IAAqD,0CAAU;IAC/D;;OAEG;IACH,gCAAY,OAAgB;QACpB,kBAAM,MAAM,EAAE,IAAI,gBAAgB,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC,CAAC;IAC3E,CAAC;IACL,6BAAC;AAAD,CAAC,AAPD,CAAqD,UAAU,GAO9D","sourcesContent":["import { BrowserContainer } from './storage.browser_container';\nimport { ContainerInfo } from './storage.container_info';\nimport { SubStorage } from './storage.sub_storage';\nimport { IStorage } from './storage.interface';\nimport { IPersistenceContainer } from '../../abstracts/persistence.container';\n\nconst /** @type {?} */ PREFIX = 'ANGULAR_PERSISTENCE_STORAGE';\n/**\n * An insternal class which implements the IStorage interface using the SubStorage implementation\n * object and it's implementation of the info object.\n * \n * @export\n * @abstract\n * \\@class AbstractBrowserStorage\n * \n * @author Scott O'Bryan\n * \\@since 1.0\n * @abstract\n */\nexport abstract class AbstractBrowserStorage extends SubStorage {\n/**\n * @param {?} storage\n */\nconstructor(storage: Storage) {\n        super(PREFIX, new BrowserContainer(storage), (storage) ? true : false);\n    }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}
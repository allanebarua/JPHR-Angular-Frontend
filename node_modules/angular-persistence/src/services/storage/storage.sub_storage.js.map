{"version":3,"file":"storage.sub_storage.js","sourceRoot":"","sources":["../../../../src/services/storage/storage.sub_storage.ts"],"names":[],"mappings":"OACO,EAAE,aAAa,EAAE,MAAM,0BAA0B;AAExD;;;;;;;;;;;GAWG;AACH;IAEA;;;;;OAKG;IACH,oBAAoB,UAAkB,EAC9B,KAA4B,EAC5B,UAAiB;QAAzB,0BAAyB,GAAzB,iBAAyB;QAFL,eAAU,GAAV,UAAU,CAAQ;QAC9B,UAAK,GAAL,KAAK,CAAuB;QAC5B,eAAU,GAAV,UAAU,CAAO;QACjB,IAAI,CAAC,KAAK,GAAG,IAAI,aAAa,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;IACtD,CAAC;IACL;;;;;;OAMG;IACI,wBAAG,GAAV,UAAW,GAAW,EAAE,KAAU;QAC1B,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACnB,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QAED,IAAI,gBAAgB,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;QAC9E,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;QAC7B,MAAM,CAAC,GAAG,CAAC;IACf,CAAC;IACL;;;;;OAKG;IACI,wBAAG,GAAV,UAAW,GAAW;QACd,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACnB,MAAM,CAAC,SAAS,CAAC;QACrB,CAAC;QAED,IAAI,gBAAgB,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,CAAC;QAEvE,EAAE,CAAC,CAAC,GAAG,KAAK,SAAS,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;QACpC,CAAC;QAED,MAAM,CAAC,GAAG,CAAC;IACf,CAAC;IACL;;;;;OAKG;IACI,2BAAM,GAAb,UAAc,GAAW;QACjB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;YACnB,MAAM,CAAC,SAAS,CAAC;QACrB,CAAC;QAED,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;QAChC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC,CAAC;IAC1D,CAAC;IACL;;;;OAIG;IACI,8BAAS,GAAhB;QAAA,iBAEK;QADG,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC,OAAO,CAAE,UAAC,OAAO,IAAO,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChF,CAAC;IACL;;;;;OAKG;IACI,8BAAS,GAAhB;QACQ,MAAM,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;IACrD,CAAC;IACL;;;;;OAKG;IACI,2BAAM,GAAb,UAAc,GAAW;QACjB,0DAA0D;QAC1D,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,SAAS,CAAC;IACvC,CAAC;IACL;;;;OAIG;IACI,yBAAI,GAAX;QAAA,iBAOK;QANG,+DAA+D;QAC/D,iEAAiE;QACjE,gDAAgD;QAChD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC,MAAM,CAAC,UAAC,GAAG;YACzC,MAAM,CAAC,KAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACP,CAAC;IACL;;;OAGG;IACK,sCAAiB,GAAzB,UAA0B,GAAW;QAC7B,MAAM,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,GAAG,GAAG,CAAC;IACxC,CAAC;IACL,iBAAC;AAAD,CAAC,AA7GD,IA6GC;AAED;IACA,gBAAgB;IAChB,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC;IAC3B,gBAAgB;IAChB,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC;IAChC,gBAAgB;IAChB,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC;IAC3B,gBAAgB;IAChB,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC;AAChC,CAAC","sourcesContent":["import { IStorage } from './storage.interface';\nimport { ContainerInfo } from './storage.container_info';\nimport { IPersistenceContainer } from '../../abstracts/persistence.container';\n/**\n * This is an internal implementation of a storage container.  It takes a PersistenceContainer \n * (which has a subset of the functionality) and straps on an info object to keep track of \n * items that are added to the container.  This class can be used for creating storage\n * containers within other storage containers. \n * \n * @export\n * \\@class PersistenceContainerImpl\n * \n * @author Scott O'Bryan\n * \\@since 1.0\n */\nexport class SubStorage implements IStorage {\nprivate _info: ContainerInfo;\n/**\n * Creates an instance of SubStorage.\n * @param {?} _namespace\n * @param {?} _root\n * @param {?=} _available\n */\nconstructor(private _namespace: string,\nprivate _root: IPersistenceContainer,\nprivate _available = true) {\n        this._info = new ContainerInfo(_namespace, _root);\n    }\n/**\n * Sets a value\n * \n * @param {?} key\n * @param {?} value\n * @return {?}\n */\npublic set(key: string, value: any): boolean {\n        if (!this._available) {\n            return false;\n        }\n\n        let /** @type {?} */ val = this._root.set(this._getNamespacedKey(key), value);\n        this._info.addAttribute(key);\n        return val;\n    }\n/**\n * Returns a value for a given key\n * \n * @param {?} key\n * @return {?}\n */\npublic get(key: string): any {\n        if (!this._available) {\n            return undefined;\n        }\n\n        let /** @type {?} */ val = this._root.get(this._getNamespacedKey(key));\n\n        if (val === undefined) {\n            this._info.removeAttribute(key);\n        }\n\n        return val;\n    }\n/**\n * Removes a value for a given key\n * \n * @param {?} key\n * @return {?}\n */\npublic remove(key: string): any {\n        if (!this._available) {\n            return undefined;\n        }\n\n        this._info.removeAttribute(key);\n        return this._root.remove(this._getNamespacedKey(key));\n    }\n/**\n * Removes any values which have been stored using this subStorage\n * container.\n * @return {?}\n */\npublic removeAll(): void {\n        this._info.getAttributes().forEach( (element) => { this.remove(element); });\n    }\n/**\n * Returns true if the parent storage object is available and if the\n * available flag was set durring instantiation\n * \n * @return {?}\n */\npublic available(): boolean {\n        return this._available && this._info.available();\n    }\n/**\n * Returns true if the value is not undefined\n * \n * @param {?} key\n * @return {?}\n */\npublic exists(key: string): boolean {\n        // This will also make sure the info object is up to date.\n        return this.get(key) !== undefined;\n    }\n/**\n * Returns a list of un-namespaced keys that have been returned by this object.\n * \n * @return {?}\n */\npublic keys(): string[] {\n        // The exists will update the underlying storage object because\n        // it invokes a get.  Still, we have an attributes object that is\n        // not tied to the object in storage, hopefully.\n        return this._info.getAttributes().filter((key) => {\n            return this.exists(key);\n        });\n    }\n/**\n * @param {?} key\n * @return {?}\n */\nprivate _getNamespacedKey(key: string): string {\n        return this._namespace + '::' + key;\n    }\n}\n\nfunction SubStorage_tsickle_Closure_declarations() {\n/** @type {?} */\nSubStorage.prototype._info;\n/** @type {?} */\nSubStorage.prototype._namespace;\n/** @type {?} */\nSubStorage.prototype._root;\n/** @type {?} */\nSubStorage.prototype._available;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}
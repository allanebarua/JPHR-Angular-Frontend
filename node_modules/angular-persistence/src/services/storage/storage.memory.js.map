{"version":3,"file":"storage.memory.js","sourceRoot":"","sources":["../../../../src/services/storage/storage.memory.ts"],"names":[],"mappings":"AACA;;;;;;;;;GASG;AACH;IAAA;QACQ,UAAK,GAAyB,EAAE,CAAC;IAuEzC,CAAC;IAtED;;;;OAIG;IACI,iCAAS,GAAhB;QACQ,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IACL;;;;;;OAMG;IACI,2BAAG,GAAV,UAAW,GAAW,EAAE,KAAU;QAC1B,EAAE,CAAC,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC;YACtB,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC3B,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QAC5B,CAAC;QACD,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IACL;;;;;OAKG;IACI,2BAAG,GAAV,UAAW,GAAW;QACd,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC3B,CAAC;IACL;;;;;OAKG;IACI,8BAAM,GAAb,UAAc,GAAQ;QACd,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,SAAS,CAAC;IACzC,CAAC;IACL;;;;;OAKG;IACI,8BAAM,GAAb,UAAc,GAAQ;QACd,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAC3B,CAAC;IACL;;;;OAIG;IACI,iCAAS,GAAhB;QACQ,IAAI,gBAAgB,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpD,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAEhB,MAAM,CAAC,IAAI,CAAC;IAChB,CAAC;IACL;;;;OAIG;IACI,4BAAI,GAAX;QACQ,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;IAEL,oBAAC;AAAD,CAAC,AAxED,IAwEC;AAED;IACA,gBAAgB;IAChB,aAAa,CAAC,SAAS,CAAC,KAAK,CAAC;AAC9B,CAAC","sourcesContent":["import { IStorage } from './storage.interface';\n/**\n * A storage type which stored values in memory.  They are assumed to be mutable, but\n * any object will work in this storage type.\n * \n * @export\n * \\@class MemoryStorage\n * \n * @author Scott O'Bryan\n * \\@since 1.0\n */\nexport class MemoryStorage implements IStorage {\nprivate _data: {[key: string]: any} = {};\n/**\n * Always returns true\n * \n * @return {?}\n */\npublic available(): boolean {\n        return true;\n    }\n/**\n * Sets a value in this object for the specified key\n * \n * @param {?} key\n * @param {?} value\n * @return {?}\n */\npublic set(key: string, value: any): boolean {\n        if (value === undefined) {\n            delete this._data[key];\n        } else {\n            this._data[key] = value;\n        }\n        return true;\n    }\n/**\n * Returns the value of the specified key\n * \n * @param {?} key\n * @return {?}\n */\npublic get(key: string) {\n        return this._data[key];\n    }\n/**\n * Returns false if the value for the key is undefined.\n * \n * @param {?} key\n * @return {?}\n */\npublic exists(key: any): boolean {\n        return this._data[key] !== undefined;\n    }\n/**\n * Removes a value from this object\n * \n * @param {?} key\n * @return {?}\n */\npublic remove(key: any) {\n        delete this._data[key];\n    }\n/**\n * Removes all values in this storage type.\n * \n * @return {?}\n */\npublic removeAll(): string[] {\n        let /** @type {?} */ keys = Object.keys(this._data);\n        this._data = {};\n\n        return keys;\n    }\n/**\n * Returns a list of all keys that are stored\n * \n * @return {?}\n */\npublic keys(): string[] {\n        return Object.keys(this._data);\n    }\n\n}\n\nfunction MemoryStorage_tsickle_Closure_declarations() {\n/** @type {?} */\nMemoryStorage.prototype._data;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
import { AbstractBrowserStorage } from './storage.abstract_browser';
/**
 * A storage object using local storage for persistence
 *
 * @export
 * \@class LocalStorage
 *
 * @author Scott O'Bryan
 * \@since 1.0
 */
export var LocalStorage = (function (_super) {
    __extends(LocalStorage, _super);
    /**
     * Creates an instance of LocalStorage.
     */
    function LocalStorage() {
        _super.call(this, localStorage);
    }
    return LocalStorage;
}(AbstractBrowserStorage));
//# sourceMappingURL=storage.local.js.map
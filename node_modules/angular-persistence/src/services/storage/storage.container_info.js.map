{"version":3,"file":"storage.container_info.js","sourceRoot":"","sources":["../../../../src/services/storage/storage.container_info.ts"],"names":[],"mappings":"AAEA,IAAM,gBAAgB,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC3C;;;;;;;;;GASG;AACH;IACA;;;OAGG;IACH,uBAAoB,UAAkB,EAC9B,UAAiC;QADrB,eAAU,GAAV,UAAU,CAAQ;QAC9B,eAAU,GAAV,UAAU,CAAuB;QACjC,IAAI,OAAO,GAAG,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAE9C,gDAAgD;QAChD,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACV,EAAE,CAAC,CAAC,OAAO,OAAO,KAAK,QAAQ,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBACpD,MAAM,IAAI,KAAK,CAAC,uCAAuC,CAAC,CAAC;YAC7D,CAAC;QACL,CAAC;IACL,CAAC;IACL;;;;;OAKG;IACI,oCAAY,GAAnB,UAAoB,GAAW;QACvB,IAAI,gBAAgB,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC5C,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACxB,CAAC;IACL;;;;;OAKG;IACI,uCAAe,GAAtB,UAAuB,GAAW;QAC1B,IAAI,gBAAgB,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC5C,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACxB,CAAC;IACL;;;;;OAKG;IACI,qCAAa,GAApB;QACQ,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;aAC9B,MAAM,CAAC,UAAC,GAAG,IAAK,OAAA,GAAG,KAAK,QAAQ,EAAhB,CAAgB,CAAC,CAAC;IAC3C,CAAC;IACL;;;;;;OAMG;IACI,iCAAS,GAAhB;QACQ,IAAI,gBAAgB,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACpE,MAAM,CAAC,CAAC,OAAO,IAAI,CAAC,OAAO,OAAO,KAAK,QAAQ,IAAK,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;IAC3E,CAAC;IACL;;OAEG;IACK,gCAAQ,GAAhB;QACQ,IAAI,gBAAgB,CAAC,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAEhE,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACP,GAAG,GAAG,EAAE,CAAC;YACT,GAAG,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;QACzB,CAAC;QAED,MAAM,CAAC,GAAG,CAAC;IACf,CAAC;IACL;;;OAGG;IACK,gCAAQ,GAAhB,UAAiB,IAAS;QAClB,uDAAuD;QACvD,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC5C,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QAC/C,CAAC;IACL,CAAC;IACL,oBAAC;AAAD,CAAC,AApFD,IAoFC;AAED;IACA,gBAAgB;IAChB,aAAa,CAAC,SAAS,CAAC,UAAU,CAAC;IACnC,gBAAgB;IAChB,aAAa,CAAC,SAAS,CAAC,UAAU,CAAC;AACnC,CAAC","sourcesContent":["import { IPersistenceContainer } from '../../abstracts/persistence.container';\n\nconst /** @type {?} */ INFO_KEY = '__INFO';\n/**\n * An internal object used to track items saved by a storage object within the persistence\n * framework.\n * \n * @export\n * \\@class ContainerInfo\n * \n * @author Scott O'Bryan\n * \\@since 1.0\n */\nexport class ContainerInfo {\n/**\n * @param {?} _namespace\n * @param {?} _container\n */\nconstructor(private _namespace: string,\nprivate _container: IPersistenceContainer) {\n        let infoObj = _container.get(this._namespace);\n\n        // If we have an existing object, check its type\n        if (infoObj) {\n            if (typeof infoObj !== 'object' || !infoObj[INFO_KEY]) {\n                throw new Error('Potential attribute conflict detected');\n            }    \n        }\n    }\n/**\n * Adds a key to this info object.\n * \n * @param {?} key\n * @return {?}\n */\npublic addAttribute(key: string) {\n        let /** @type {?} */ item = this._getInfo();\n        item[key] = true;\n        this._setInfo(item);\n    }\n/**\n * Removes a key from this info object.\n * \n * @param {?} key\n * @return {?}\n */\npublic removeAttribute(key: string) {\n        let /** @type {?} */ info = this._getInfo();\n        delete info[key];\n        this._setInfo(info);\n    }\n/**\n * Returns a list of keys that have been added to this\n * info object.\n * \n * @return {?}\n */\npublic getAttributes(): string[] {        \n        return Object.keys(this._getInfo())\n            .filter((key) => key !== INFO_KEY);\n    }\n/**\n * Checks to see if the value stored in the _namespace\n * is an info object or if it is empty.  If it is NOT\n * an info object, then false is returned.\n * \n * @return {?}\n */\npublic available(): boolean {\n        let /** @type {?} */ infoObj = this._container.get(this._namespace);\n        return !infoObj || (typeof infoObj === 'object' &&  infoObj[INFO_KEY]);\n    }\n/**\n * @return {?}\n */\nprivate _getInfo(): any {\n        let /** @type {?} */ obj = this._container.get(this._namespace);\n\n        if (!obj) {\n            obj = {};\n            obj[INFO_KEY] = true;\n        }\n\n        return obj;\n    }\n/**\n * @param {?} info\n * @return {?}\n */\nprivate _setInfo(info: any) {\n        // this is 1 because the info identifier will be there.\n        if (Object.keys(info).length <= 1) {\n            this._container.remove(this._namespace);\n        } else {\n            this._container.set(this._namespace, info);\n        }\n    }\n}\n\nfunction ContainerInfo_tsickle_Closure_declarations() {\n/** @type {?} */\nContainerInfo.prototype._namespace;\n/** @type {?} */\nContainerInfo.prototype._container;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}